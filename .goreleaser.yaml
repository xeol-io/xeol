release:
  prerelease: auto
  draft: false

env:
  # required to support multi architecture docker builds
  - DOCKER_CLI_EXPERIMENTAL=enabled
  - CGO_ENABLED=0

builds:
  - id: linux-build
    dir: ./cmd/xeol
    binary: xeol
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    # set the modified timestamp on the output binary to the git timestamp to ensure a reproducible build
    mod_timestamp: &build-timestamp '{{ .CommitTimestamp }}'
    flags:
      # trimpath is for reproducible builds
      # remove all file system paths from the resulting executable.
      # Instead of absolute file system paths, the recorded file names
      # will begin with either "go" (for the standard library),
      # or a module path@version (when using modules),
      # or a plain import path (when using GOPATH).
      - -trimpath
      - -tags=netgo
    ldflags: &build-ldflags |
      -w
      -s
      -extldflags '-static'
      -X main.version={{.Version}}
      -X main.gitCommit={{.Commit}}
      -X main.buildDate={{.Date}}
      -X main.gitDescription={{.Summary}}

  - id: darwin-build
    dir: ./cmd/xeol
    binary: xeol
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    flags:
      # trimpath is for reproducible builds
      # remove all file system paths from the resulting executable.
      # Instead of absolute file system paths, the recorded file names
      # will begin with either "go" (for the standard library),
      # or a module path@version (when using modules),
      # or a plain import path (when using GOPATH).
      - -trimpath
      - -tags=netgo
    mod_timestamp: *build-timestamp
    ldflags: *build-ldflags

  - id: windows-build
    dir: ./cmd/xeol
    binary: xeol
    goos:
      - windows
    goarch:
      - amd64
      - arm64
    flags:
      # trimpath is for reproducible builds
      # remove all file system paths from the resulting executable.
      # Instead of absolute file system paths, the recorded file names
      # will begin with either "go" (for the standard library),
      # or a module path@version (when using modules),
      # or a plain import path (when using GOPATH).
      - -trimpath
      - -tags=netgo
    mod_timestamp: *build-timestamp
    ldflags: *build-ldflags

archives:
  - id: linux-archives
    builds:
      - linux-build

  - id: darwin-archives
    builds:
      - darwin-build

  - id: windows-archives
    format: zip
    builds:
      - windows-build

nfpms:
  - license: "Apache 2.0"
    maintainer: "noqcks"
    homepage: &website "https://github.com/xeol-io/xeol"
    description: &description "A scanner for end-of-life (EOL) software in container images, filesystems, and SBOMs"
    formats:
      - rpm
      - deb

brews:
  - repository:
      owner: xeol-io
      name: homebrew-xeol
    ids:
      - darwin-archives
      - linux-archives
    homepage: *website
    description: *description
    license: "Apache License 2.0"

dockers:
  - image_templates:
      - noqcks/xeol:debug
      - noqcks/xeol:{{.Tag}}-debug
      - ghcr.io/noqcks/xeol:debug
      - ghcr.io/noqcks/xeol:{{.Tag}}-debug
    goarch: amd64
    dockerfile: Dockerfile.debug
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--build-arg=BUILD_DATE={{.Date}}"
      - "--build-arg=BUILD_VERSION={{.Version}}"
      - "--build-arg=VCS_REF={{.FullCommit}}"
      - "--build-arg=VCS_URL={{.GitURL}}"

  - image_templates:
      - noqcks/xeol:debug-arm64v8
      - noqcks/xeol:{{.Tag}}-debug-arm64v8
      - ghcr.io/noqcks/xeol:debug-arm64v8
      - ghcr.io/noqcks/xeol:{{.Tag}}-debug-arm64v8
    goarch: arm64
    dockerfile: Dockerfile.debug
    use: buildx
    build_flag_templates:
      - "--platform=linux/arm64/v8"
      - "--build-arg=BUILD_DATE={{.Date}}"
      - "--build-arg=BUILD_VERSION={{.Version}}"
      - "--build-arg=VCS_REF={{.FullCommit}}"
      - "--build-arg=VCS_URL={{.GitURL}}"

  - image_templates:
      - noqcks/xeol:latest
      - noqcks/xeol:{{.Tag}}
      - ghcr.io/noqcks/xeol:latest
      - ghcr.io/noqcks/xeol:{{.Tag}}
    goarch: amd64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--build-arg=BUILD_DATE={{.Date}}"
      - "--build-arg=BUILD_VERSION={{.Version}}"
      - "--build-arg=VCS_REF={{.FullCommit}}"
      - "--build-arg=VCS_URL={{.GitURL}}"

  - image_templates:
      - noqcks/xeol:{{.Tag}}-arm64v8
      - ghcr.io/noqcks/xeol:{{.Tag}}-arm64v8
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/arm64/v8"
      - "--build-arg=BUILD_DATE={{.Date}}"
      - "--build-arg=BUILD_VERSION={{.Version}}"
      - "--build-arg=VCS_REF={{.FullCommit}}"
      - "--build-arg=VCS_URL={{.GitURL}}"

docker_manifests:
  - name_template: noqcks/xeol:latest
    image_templates:
      - noqcks/xeol:{{.Tag}}
      - noqcks/xeol:{{.Tag}}-arm64v8

  - name_template: noqcks/xeol:debug
      - noqcks/xeol:{{.Tag}}-debug
      - noqcks/xeol:{{.Tag}}-debug-arm64v8

  - name_template: noqcks/xeol:{{.Tag}}
    image_templates:
      - noqcks/xeol:{{.Tag}}
      - noqcks/xeol:{{.Tag}}-arm64v8

  - name_template: ghcr.io/noqcks/xeol:latest
    image_templates:
      - ghcr.io/noqcks/xeol:{{.Tag}}
      - ghcr.io/noqcks/xeol:{{.Tag}}-arm64v8

  - name_template: ghcr.io/noqcks/xeol:debug
    image_templates:
      - ghcr.io/noqcks/xeol:{{.Tag}}-debug
      - ghcr.io/noqcks/xeol:{{.Tag}}-debug-arm64v8

  - name_template: ghcr.io/noqcks/xeol:{{.Tag}}
    image_templates:
      - ghcr.io/noqcks/xeol:{{.Tag}}
      - ghcr.io/noqcks/xeol:{{.Tag}}-arm64v8
